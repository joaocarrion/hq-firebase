rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
      allow read, write: if false;
    }
    
    match /users/{$id} {
    	allow create, read, write: if $id == request.auth.uid
    }
    
    match /preload/{document=**} {
    	allow read: if request.auth != null
      allow create, write: if request.auth.uid == "VeibPXiT8cNtnV07ovXi9Gk4fHN2"
    }
    
    match /user_profiles/{$id} {
    	allow read, write: if request.auth.uid == $id
    }
    
    // Groups Collection
    match /groups/{groupId} {
      allow create: if request.auth != null; // Anyone can create a group

      allow read: if isGroupMember(groupId);
      allow update, delete: if isGroupAdmin(groupId);
    }

    match /groups/{groupId}/categories/{categoryId} {
      allow read, write: if isGroupMember(groupId) || isUserAdmin();
    }

    match /groups/{groupId}/metadata/{metadataId} {
      allow read: if isUserAdmin() || isGroupMember(groupId);
      allow write: if isUserAdmin();
    }

    // Group Authorizations Collection
    match /group_authorizations/{groupId} {
    	allow create: if request.auth != null;
      
      allow read: if isGroupMember(groupId);
      allow update: if isGroupAdmin(groupId);
    }
    
      // Helper Functions
    function isGroupMember(groupId) {
      return exists(/databases/$(database)/documents/group_authorizations/$(groupId)) &&
             request.auth.uid in get(/databases/$(database)/documents/group_authorizations/$(groupId)).data.users;
    }

    function isGroupAdmin(groupId) {
      return exists(/databases/$(database)/documents/group_authorizations/$(groupId)) &&
             request.auth.uid in get(/databases/$(database)/documents/group_authorizations/$(groupId)).data.admins;
    }

    function isUserAdmin() {
      return request.auth.uid == 'us-central1-updateCategoryMetadata'
    }
  }
}
